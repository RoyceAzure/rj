// Code generated by MockGen. DO NOT EDIT.
// Source: ./mongodb.go

// Package mockmongo is a generated GoMock package.
package mockmongo

import (
	context "context"
	reflect "reflect"

	mongo "github.com/RoyceAzure/rj/repo/mongo"
	gomock "github.com/golang/mock/gomock"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"
)

// MockIMongoDao is a mock of IMongoDao interface.
type MockIMongoDao struct {
	ctrl     *gomock.Controller
	recorder *MockIMongoDaoMockRecorder
}

// MockIMongoDaoMockRecorder is the mock recorder for MockIMongoDao.
type MockIMongoDaoMockRecorder struct {
	mock *MockIMongoDao
}

// NewMockIMongoDao creates a new mock instance.
func NewMockIMongoDao(ctrl *gomock.Controller) *MockIMongoDao {
	mock := &MockIMongoDao{ctrl: ctrl}
	mock.recorder = &MockIMongoDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMongoDao) EXPECT() *MockIMongoDaoMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockIMongoDao) GetAll(ctx context.Context) ([]*mongo.LogEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx)
	ret0, _ := ret[0].([]*mongo.LogEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockIMongoDaoMockRecorder) GetAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIMongoDao)(nil).GetAll), ctx)
}

// Insert mocks base method.
func (m *MockIMongoDao) Insert(ctx context.Context, entry mongo.LogEntry) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", ctx, entry)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockIMongoDaoMockRecorder) Insert(ctx, entry interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockIMongoDao)(nil).Insert), ctx, entry)
}

// InsertBsonM mocks base method.
func (m *MockIMongoDao) InsertBsonM(ctx context.Context, entry primitive.M) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertBsonM", ctx, entry)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertBsonM indicates an expected call of InsertBsonM.
func (mr *MockIMongoDaoMockRecorder) InsertBsonM(ctx, entry interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertBsonM", reflect.TypeOf((*MockIMongoDao)(nil).InsertBsonM), ctx, entry)
}
